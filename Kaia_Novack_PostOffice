#Name: Kaia_Novack_PostOffice
#Description:
#Bugs:
#Features:
#Log:

#cost = getPostageType + getZip #the cost of mailing the package is equal to getPostageType plus getZip


def getPostageType(height, length, thickness): #creates a function called getPostageType
    
    #Regular_Post_Card:
    if ((height > 3.5 and height < 6) and (length > 3.5 and  length < 4.25) and (thickness > .007 and thickness < .015)): #creates values the item has to fit in to be a regular post card
        type = "Regular Post Card"                                                          #if the variables meet this criteria it is a regular post card
        return type                                                                                 #return the type of the item being mailed


    #Large_Post_Card:
    elif ((height > 6 and height < 11.25) and (length > 4.25 and length < 6) and (thickness > .016 and thickness < .25)): #creates values the item has to fit in to be a large post card
        type = ("Large Post Card") #if the variables meet this criteria it is a large post card
        return type #return the type of the item being mailed

    #Envelope:
    elif ((height > 5 and height < 11.5) and (length > 3.5 and length < 6.125) and (thickness > .016 and thickness < .25)): #creates values the item has to fit in to be an envelope
        type = ("Envelope") #if the variables meet this criteria it is an envelope
        return type #return the type of the item being mailed

    #Large_Envelope:
    elif ((height > 11 and height < 18) and (length > 6.125 and length < 24) and (thickness > .25 and thickness < .5)): #creates values the item has to fit in to be a large envelope
        type = ("Large Envelope") #if the variables meet this criteria it is a large envelope
        return type #return the type of the item being mailed

    #Package:
    elif ((height > 18) and (length > 24) and (thickness > .5)and ((height + length + thickness) < 84)): #creates values the item has to fit in to be a package
        type = ("Package") #if the variables meet this criteria it is a package
        return type #return the type of the item being mailed

    #Large_Package:
    elif ((height + length + thickness) > 84 and (height + length + thickness) < 130): #creates values the item has to fit in to be a large package
        type = ("Large Package") #if the variables meet this criteria it is a large package
        return type #return the type of the item being mailed

    #Unmailable: 
    else: #anything outside of these values is unmailable
        print ("Unmailable") #print unmailable


#def getZip (zip1, zip2): #creates a new function named getZip
    #zip1 = getZip()
    #zip2 = getZip()
#totalhops = abs(zip1 - zip2)


#if zip1 > 00001 and < 06999:
    #skips1



def main():

    while True:
        dimensions = input("enter height, length, thickness, zipcode where you are mailing from, zipcode where you are mailing to:").split(",")

        height = float(dimensions[0])
        length = float(dimensions[1])
        thickness = float(dimensions [2])
        #zip1 = int(dimensions [3])
        #zip2 = int(dimensions [4])

        type = getPostageType(height, length, thickness)
        print (type)

main()